@@ -2,18 +2,38 @@
 /**
  * paggenretord actions.
  *
- * @package    siga
+ * @package    Roraima
  * @subpackage paggenretord
- * @author     Your name here
- * @version    SVN: $Id: actions.class.php 2288 2006-10-02 15:22:13Z fabien $
+ * @author     $Author$ <desarrollo@cidesa.com.ve>
+ * @version SVN: $Id$
+ * 
+ * @copyright  Copyright 2007, Cide S.A.
+ * @license    http://opensource.org/licenses/gpl-2.0.php GPLv2
  */
 class paggenretordActions extends autopaggenretordActions
 {
+  /**
+   * Función para colocar el codigo necesario en  
+   * el proceso de edición.
+   * Aquí se pueden buscar datos adicionales que necesite la vista
+   * Esta función es parte de la acción executeEdit, que maneja tanto
+   * el create como el edit del formulario.
+   * Generalmente aqui se debe y puede colocar los llamados a los configGrid
+   * Para generar la información de configuración de los grids.
+   *
+   */
   public function editing()
   {
   	$this->configGrid();
   }
 
+  /**
+   * Esta función permite definir la configuración del grid de datos
+   * que contiene el formulario. Esta función debe ser llamada
+   * en las acciones, create, edit y handleError para recargar en todo momento
+   * los datos del grid.
+   *
+   */
   public function configGrid()
   {
     $this->configGridRet();
@@ -23,6 +43,13 @@
     $this->configGridMovimientos($this->opordpag->getNumord());
   }
 
+  /**
+   * Esta función permite definir la configuración del grid de datos
+   * que contiene el formulario. Esta función debe ser llamada
+   * en las acciones, create, edit y handleError para recargar en todo momento
+   * los datos del grid.
+   *
+   */
   public function configGridRet()
   {
     $reg1=array();
@@ -43,6 +70,13 @@
     $this->opordpag->setObjret($this->objret);
   }
 
+  /**
+   * Esta función permite definir la configuración del grid de datos
+   * que contiene el formulario. Esta función debe ser llamada
+   * en las acciones, create, edit y handleError para recargar en todo momento
+   * los datos del grid.
+   *
+   */
   public function configGridOculRet()
   {
     $reg2=array();
@@ -54,6 +88,13 @@
     $this->opordpag->setObjoculret($this->objoculret);
   }
 
+  /**
+   * Esta función permite definir la configuración del grid de datos
+   * que contiene el formulario. Esta función debe ser llamada
+   * en las acciones, create, edit y handleError para recargar en todo momento
+   * los datos del grid.
+   *
+   */
   public function configGridConsulRet($numord='')
   {
     $SQL1 = "select (CASE when a.numret!='NOASIGNA' THEN a.numret else '' END) as numret,a.codtip,b.destip,
@@ -77,6 +118,13 @@
     $this->opordpag->setObjconsulret($this->objconsulret);
   }
 
+  /**
+   * Esta función permite definir la configuración del grid de datos
+   * que contiene el formulario. Esta función debe ser llamada
+   * en las acciones, create, edit y handleError para recargar en todo momento
+   * los datos del grid.
+   *
+   */
   public function configGridFacturas($numord='', $arreglo1=array(), $arreglo2=array())
   {
     $sql="SELECT a.fecfac as fecfac, (CASE when a.tiptra='01' THEN a.numfac
@@ -116,6 +164,13 @@
     $this->opordpag->setObjfac($this->objfac);
   }
 
+  /**
+   * Esta función permite definir la configuración del grid de datos
+   * que contiene el formulario. Esta función debe ser llamada
+   * en las acciones, create, edit y handleError para recargar en todo momento
+   * los datos del grid.
+   *
+   */
   public function configGridMovimientos($numord='')
   {
     $c = new Criteria();
@@ -135,6 +190,12 @@
     $this->opordpag->setObjmov($this->objmov);
   }
 
+  /**
+   * Función para procesar _todas_ las funciones Ajax del formulario
+   * Cada función esta identificada con el valor de la vista "ajax"
+   * el cual traerá el indice de lo que se quiere procesar.
+   *
+   */
   public function executeAjax()
   {
     $codigo = $this->getRequestParameter('codigo','');
@@ -255,6 +316,15 @@
      }
   }
 
+  
+  
+  
+  /**
+   *
+   * Función que se ejecuta luego los validadores del negocio (validators)   * Para realizar validaciones específicas del negocio del formulario
+   * Para mayor información vease http://www.symfony-project.org/book/1_0/06-Inside-the-Controller-Layer#chapter_06_validation_and_error_handling_methods
+   *
+   */
   public function validateEdit()
   {
     $this->coderr =-1;
